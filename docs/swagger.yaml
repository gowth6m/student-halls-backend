basePath: /v0
definitions:
  product.CreateProductRequest:
    properties:
      category:
        type: string
      description:
        type: string
      name:
        type: string
      sellerId:
        type: string
      variants:
        items:
          $ref: '#/definitions/product.CreateVariantRequest'
        type: array
    required:
    - category
    - name
    - sellerId
    - variants
    type: object
  product.CreateVariantRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    required:
    - name
    - price
    - stock
    type: object
  product.ProductResponse:
    properties:
      category:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      seller:
        type: string
      updatedAt:
        type: string
      variants:
        items:
          $ref: '#/definitions/product.VariantResponse'
        type: array
    type: object
  product.VariantResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      updatedAt:
        type: string
    type: object
  shop.CreateShopRequest:
    properties:
      address:
        type: string
      description:
        type: string
      name:
        type: string
      ownerId:
        type: string
    required:
    - name
    - ownerId
    type: object
  shop.ShopResponse:
    properties:
      address:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      ownerId:
        type: string
      products:
        items:
          $ref: '#/definitions/product.ProductResponse'
        type: array
      updatedAt:
        type: string
    type: object
  user.CreateUserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/user.UserResponse'
    type: object
  user.UserResponse:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
host: api.student-halls.com
info:
  contact: {}
  description: This is the REST API for Student Halls.
  title: Student Halls API
  version: "1"
paths:
  /product/all:
    get:
      consumes:
      - application/json
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: Products retrieved successfully
          schema:
            items:
              $ref: '#/definitions/product.ProductResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all products
      tags:
      - products
  /product/create:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product object to be created
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Product created successfully
          schema:
            $ref: '#/definitions/product.ProductResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - products
  /product/createMany:
    post:
      consumes:
      - application/json
      description: Create many products
      parameters:
      - description: Products to be created
        in: body
        name: products
        required: true
        schema:
          items:
            $ref: '#/definitions/product.CreateProductRequest'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Products created successfully
          schema:
            items:
              $ref: '#/definitions/product.ProductResponse'
            type: array
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create many products
      tags:
      - products
  /shop/all:
    post:
      consumes:
      - application/json
      description: Get all shops
      produces:
      - application/json
      responses:
        "200":
          description: Shops retrieved successfully
          schema:
            items:
              $ref: '#/definitions/shop.ShopResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all shops
      tags:
      - shops
  /shop/create:
    post:
      consumes:
      - application/json
      description: Create a new shop
      parameters:
      - description: Shop object to be created
        in: body
        name: shop
        required: true
        schema:
          $ref: '#/definitions/shop.CreateShopRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Shop created successfully
          schema:
            $ref: '#/definitions/shop.ShopResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new shop
      tags:
      - shops
  /user/{username}:
    get:
      consumes:
      - application/json
      description: Get user by username
      parameters:
      - description: User username
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get user by username
      tags:
      - users
  /user/all:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            items:
              $ref: '#/definitions/user.UserResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all users
      tags:
      - users
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
  /user/current:
    get:
      consumes:
      - application/json
      description: Get current user
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - users
  /user/email/{email}:
    get:
      consumes:
      - application/json
      description: Get user by email
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get user by email
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - users
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
