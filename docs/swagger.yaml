basePath: /v0
definitions:
  university.CreateUniversityRequest:
    properties:
      coverImage:
        type: string
      halls:
        items:
          type: string
        type: array
      location:
        type: string
      name:
        type: string
      numberOfStudents:
        type: integer
      website:
        type: string
    required:
    - coverImage
    - halls
    - location
    - name
    - numberOfStudents
    - website
    type: object
  university.UniversityResponse:
    properties:
      coverImage:
        type: string
      halls:
        items:
          type: string
        type: array
      id:
        type: string
      location:
        type: string
      name:
        type: string
      numberOfStudents:
        type: integer
      website:
        type: string
    type: object
  user.CreateUserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      university:
        type: string
      username:
        type: string
      yearOfStudy:
        type: integer
    required:
    - email
    - password
    - username
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/user.UserResponse'
    type: object
  user.UserResponse:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      university:
        type: string
      username:
        type: string
      yearOfStudy:
        type: integer
    type: object
host: api.student-halls.com
info:
  contact: {}
  description: This is the REST API for Student Halls.
  title: Student Halls API
  version: "1"
paths:
  /university/all:
    get:
      consumes:
      - application/json
      description: Get all universities
      produces:
      - application/json
      responses:
        "200":
          description: Universities retrieved successfully
          schema:
            items:
              $ref: '#/definitions/university.UniversityResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all universities
      tags:
      - universities
  /university/create:
    post:
      consumes:
      - application/json
      description: Create a new university
      parameters:
      - description: University object to be created
        in: body
        name: university
        required: true
        schema:
          $ref: '#/definitions/university.CreateUniversityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: University created successfully
          schema:
            $ref: '#/definitions/university.UniversityResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new university
      tags:
      - universities
  /university/id/{id}:
    get:
      consumes:
      - application/json
      description: Get university by ID
      parameters:
      - description: University ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: University retrieved successfully
          schema:
            $ref: '#/definitions/university.UniversityResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: University not found
          schema:
            additionalProperties: true
            type: object
      summary: Get university by ID
      tags:
      - universities
  /user/{username}:
    get:
      consumes:
      - application/json
      description: Get user by username
      parameters:
      - description: User username
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get user by username
      tags:
      - users
  /user/all:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            items:
              $ref: '#/definitions/user.UserResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all users
      tags:
      - users
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
  /user/current:
    get:
      consumes:
      - application/json
      description: Get current user
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - users
  /user/email/{email}:
    get:
      consumes:
      - application/json
      description: Get user by email
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get user by email
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "400":
          description: Invalid request format or parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - users
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
